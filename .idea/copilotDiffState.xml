<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/COMMIT_MESSAGE.txt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/COMMIT_MESSAGE.txt" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/App.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/App.jsx" />
              <option name="originalContent" value="import React, { useEffect, useState } from 'react';&#10;import { Routes, Route } from 'react-router-dom';&#10;import { Toaster } from 'react-hot-toast';&#10;import { SignIn, SignUp, useAuth } from '@clerk/clerk-react';&#10;import Signup from './components/Signup';&#10;import PrivateRoute from './components/PrivateRoute';&#10;import RequireAdmin from './components/auth/RequireAdmin';&#10;import AdminDashboard from './components/AdminDashboard';&#10;import Error404 from './components/Error404';&#10;import Navbar from './components/Navbar';&#10;import Footer from './components/Footer';&#10;import ScrollToTop from './components/ScrollToTop';&#10;&#10;import About from './Pages/About';&#10;import Privacy from './Pages/Privacy';&#10;import Terms from './Pages/Terms';&#10;import Contact from './Pages/Contact';&#10;import ReportIssue from './Pages/ReportIssue';&#10;import ServerError from './components/ServerError';&#10;import DownloadAndroid from './Pages/DownloadAndroid';&#10;import DownloadIOS from './Pages/DownloadIOS';&#10;import NewIssue from './Pages/NewIssue';&#10;import IssueDetail from './Pages/IssueDetail';&#10;import UserDashboard from './Pages/UserDashboard';&#10;import CommunityVotingPage from './Pages/CommunityVotingPage';&#10;import Profile from './Pages/Profile';&#10;import Resources from './Pages/Resources';&#10;import MyComplaints from './Pages/MyComplaints';&#10;import CivicEducation from './Pages/CivicEducation';&#10;import CivicSimulator from './Pages/CivicSimulator';&#10;import Contributors from './Pages/Contributors';&#10;import ScrollToTopOnRouteChange from './components/ScrollToTopOnRouteChange';&#10;&#10;const App = () =&gt; {&#10;  const { isSignedIn } = useAuth();&#10;  // Only show Navbar if user is NOT signed in&#10;  // Only show Navbar if user is NOT signed in&#10;  // Only show Navbar if user is NOT signed in&#10;  // Only show Navbar if user is NOT signed in&#10;        toastOptions={{&#10;          className:&#10;            '!bg-white dark:!bg-gray-800 !text-gray-900 dark:!text-white !border !border-gray-200 dark:!border-gray-700',&#10;          duration: 4000,&#10;          success: {&#10;            iconTheme: { primary: '#10B981', secondary: 'white' },&#10;          },&#10;          error: {&#10;            iconTheme: { primary: '#EF4444', secondary: 'white' },&#10;          },&#10;        }}&#10;      /&gt;&#10;          &#10;      &lt;Navbar/&gt;&#10;&#10;      &lt;main className=&quot;min-h-screen&quot;&gt;&#10;        &lt;Routes&gt;&#10;          {/* Clerk Auth Routes */}&#10;        &lt;Routes&gt;&#10;          {/* Clerk Auth Routes */}&#10;        &lt;Routes&gt;&#10;          {/* Clerk Auth Routes */}&#10;        &lt;Routes&gt;&#10;          {/* Clerk Auth Routes */}&#10;          &lt;Route&#10;            path=&quot;/sign-in/*&quot;&#10;            element={&lt;SignIn routing=&quot;path&quot; path=&quot;/sign-in&quot; redirectUrl=&quot;/&quot; /&gt;}&#10;          /&gt;&#10;          &lt;Route&#10;            path=&quot;/signup/*&quot;&#10;            element={&lt;SignUp routing=&quot;path&quot; path=&quot;/signup&quot; redirectUrl=&quot;/&quot; /&gt;}&#10;          /&gt;&#10;          &lt;Route path=&quot;/about&quot; element={&lt;About /&gt;} /&gt;&#10;          {/* Public Routes */}&#10;          &lt;Route path=&quot;/&quot; element={&lt;Home /&gt;} /&gt;&#10;          &lt;Route path=&quot;/about&quot; element={&lt;About /&gt;} /&gt;&#10;          &lt;Route path=&quot;/privacy&quot; element={&lt;Privacy /&gt;} /&gt;&#10;          &lt;Route path=&quot;/terms&quot; element={&lt;Terms /&gt;} /&gt;&#10;          &lt;Route path=&quot;/contact&quot; element={&lt;Contact /&gt;} /&gt;&#10;          &lt;Route path=&quot;/login&quot; element={&lt;Login /&gt;} /&gt;&#10;          &lt;Route path=&quot;/signup&quot; element={&lt;Signup /&gt;} /&gt;&#10;          &lt;Route path=&quot;/report-issue&quot; element={&lt;ReportIssue /&gt;} /&gt;&#10;          &lt;Route path=&quot;/download-android&quot; element={&lt;DownloadAndroid /&gt;} /&gt;&#10;          &lt;Route path=&quot;/download-ios&quot; element={&lt;DownloadIOS /&gt;} /&gt;&#10;          &lt;Route path=&quot;/issues/new&quot; element={&lt;NewIssue /&gt;} /&gt;&#10;          &lt;Route path=&quot;/issues/:id&quot; element={&lt;IssueDetail /&gt;} /&gt;&#10;          &lt;Route path=&quot;/civic-education&quot; element={&lt;CivicEducation /&gt;} /&gt;&#10;          &lt;Route path=&quot;/civic-simulator&quot; element={&lt;CivicSimulator /&gt;} /&gt;&#10;          &lt;Route path=&quot;/community-voting&quot; element={&lt;CommunityVotingPage /&gt;} /&gt;&#10;          &lt;Route path=&quot;/profile&quot; element={&lt;Profile /&gt;} /&gt;&#10;          &lt;Route path=&quot;/resources&quot; element={&lt;Resources /&gt;} /&gt;&#10;          &lt;Route path=&quot;/complaints&quot; element={&lt;MyComplaints /&gt;} /&gt;&#10;          &lt;Route path=&quot;/contributors&quot; element={&lt;Contributors /&gt;} /&gt;&#10;            path=&quot;/admin&quot;&#10;          {/* Protected Routes */}&#10;          &lt;Route&#10;            path=&quot;/admin&quot;&#10;            element={&#10;              &lt;RequireAdmin&gt;&#10;                &lt;AdminDashboard /&gt;&#10;              &lt;/RequireAdmin&gt;&#10;            }&#10;          /&gt;&#10;          &lt;Route&#10;            path=&quot;/admin/dashboard&quot;&#10;            element={&#10;              &lt;PrivateRoute allowedRoles={['admin']}&gt;&#10;                &lt;AdminDashboard /&gt;&#10;              &lt;/PrivateRoute&gt;&#10;            }&#10;          /&gt;&#10;          &lt;Route&#10;            path=&quot;/home&quot;&#10;            element={&#10;              &lt;PrivateRoute allowedRoles={['user', 'admin']}&gt;&#10;                &lt;Home /&gt;&#10;              &lt;/PrivateRoute&gt;&#10;            }&#10;          /&gt;&#10;          &lt;Route&#10;            path=&quot;/user/dashboard&quot;&#10;            element={&#10;              &lt;PrivateRoute allowedRoles={['user', 'admin']}&gt;&#10;                &lt;UserDashboard /&gt;&#10;              &lt;/PrivateRoute&gt;&#10;            }&#10;          /&gt;&#10;          &lt;Route path=&quot;*&quot; element={&lt;Error404 /&gt;} /&gt;&#10;          {/* Errors */}&#10;          &lt;Route path=&quot;/500&quot; element={&lt;ServerError /&gt;} /&gt;&#10;          &lt;Route path=&quot;*&quot; element={&lt;Error404 /&gt;} /&gt;&#10;        &lt;/Routes&gt;&#10;//   return (&#10;//     &lt;div className=&quot;relative min-h-screen&quot;&gt;&#10;//       {/* Your existing layout code */}&#10;//       {children}&#10;      &#10;//       {/* Add the ChatBot component at the end */}&#10;//       &lt;ChatBot /&gt;&#10;//     &lt;/div&gt;&#10;//   );&#10;// }&#10;" />
              <option name="updatedContent" value="import React, { useEffect, useState } from 'react';&#13;&#10;import { Routes, Route, useLocation } from 'react-router-dom';&#13;&#10;import { Toaster } from 'react-hot-toast';&#13;&#10;import { SignIn, SignUp, useAuth } from '@clerk/clerk-react';&#13;&#10;import { AnimatePresence } from 'framer-motion';&#13;&#10;&#13;&#10;import Home from './Home';&#13;&#10;import Login from './components/Login';&#13;&#10;import Signup from './components/Signup';&#13;&#10;import PrivateRoute from './components/PrivateRoute';&#13;&#10;import RequireAdmin from './components/auth/RequireAdmin';&#13;&#10;import AdminDashboard from './components/AdminDashboard';&#13;&#10;import Error404 from './components/Error404';&#13;&#10;import Navbar from './components/Navbar';&#13;&#10;import Footer from './components/Footer';&#13;&#10;import ScrollToTop from './components/ScrollToTop';&#13;&#10;&#13;&#10;import About from './Pages/About';&#13;&#10;import Privacy from './Pages/Privacy';&#13;&#10;import Terms from './Pages/Terms';&#13;&#10;import Contact from './Pages/Contact';&#13;&#10;import ReportIssue from './Pages/ReportIssue';&#13;&#10;import ServerError from './components/ServerError';&#13;&#10;import DownloadAndroid from './Pages/DownloadAndroid';&#13;&#10;import DownloadIOS from './Pages/DownloadIOS';&#13;&#10;import NewIssue from './Pages/NewIssue';&#13;&#10;import IssueDetail from './Pages/IssueDetail';&#13;&#10;import UserDashboard from './Pages/UserDashboard';&#13;&#10;import CommunityVotingPage from './Pages/CommunityVotingPage';&#13;&#10;import Profile from './Pages/Profile';&#13;&#10;import Resources from './Pages/Resources';&#13;&#10;import MyComplaints from './Pages/MyComplaints';&#13;&#10;import CivicEducation from './Pages/CivicEducation';&#13;&#10;import CivicSimulator from './Pages/CivicSimulator';&#13;&#10;import Contributors from './Pages/Contributors';&#13;&#10;import ScrollToTopOnRouteChange from './components/ScrollToTopOnRouteChange';&#13;&#10;&#13;&#10;const App = () =&gt; {&#13;&#10;  const { isSignedIn } = useAuth();&#13;&#10;  const location = useLocation();&#13;&#10;  &#13;&#10;  return (&#13;&#10;    &lt;&gt;&#13;&#10;      &lt;ScrollToTop /&gt;&#13;&#10;      &lt;ScrollToTopOnRouteChange/&gt;&#13;&#10;      &lt;Toaster&#13;&#10;        position=&quot;top-right&quot;&#13;&#10;        toastOptions={{&#13;&#10;          className:&#13;&#10;            '!bg-white dark:!bg-gray-800 !text-gray-900 dark:!text-white !border !border-gray-200 dark:!border-gray-700',&#13;&#10;          duration: 4000,&#13;&#10;          success: {&#13;&#10;            iconTheme: { primary: '#10B981', secondary: 'white' },&#13;&#10;          },&#13;&#10;          error: {&#13;&#10;            iconTheme: { primary: '#EF4444', secondary: 'white' },&#13;&#10;          },&#13;&#10;        }}&#13;&#10;      /&gt;&#13;&#10;          &#13;&#10;      &lt;Navbar/&gt;&#13;&#10;&#13;&#10;      &lt;main className=&quot;min-h-screen&quot;&gt;&#13;&#10;        &lt;AnimatePresence mode=&quot;wait&quot; initial={false}&gt;&#13;&#10;          &lt;Routes location={location} key={location.pathname}&gt;&#13;&#10;            {/* Clerk Auth Routes */}&#13;&#10;            &lt;Route&#13;&#10;              path=&quot;/sign-in/*&quot;&#13;&#10;              element={&lt;SignIn routing=&quot;path&quot; path=&quot;/sign-in&quot; redirectUrl=&quot;/&quot; /&gt;}&#13;&#10;            /&gt;&#13;&#10;            &lt;Route&#13;&#10;              path=&quot;/signup/*&quot;&#13;&#10;              element={&lt;SignUp routing=&quot;path&quot; path=&quot;/signup&quot; redirectUrl=&quot;/&quot; /&gt;}&#13;&#10;            /&gt;&#13;&#10;&#13;&#10;            {/* Public Routes */}&#13;&#10;            &lt;Route path=&quot;/&quot; element={&lt;Home /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/about&quot; element={&lt;About /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/privacy&quot; element={&lt;Privacy /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/terms&quot; element={&lt;Terms /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/contact&quot; element={&lt;Contact /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/login&quot; element={&lt;Login /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/signup&quot; element={&lt;Signup /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/report-issue&quot; element={&lt;ReportIssue /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/download-android&quot; element={&lt;DownloadAndroid /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/download-ios&quot; element={&lt;DownloadIOS /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/issues/new&quot; element={&lt;NewIssue /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/issues/:id&quot; element={&lt;IssueDetail /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/civic-education&quot; element={&lt;CivicEducation /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/civic-simulator&quot; element={&lt;CivicSimulator /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/community-voting&quot; element={&lt;CommunityVotingPage /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/profile&quot; element={&lt;Profile /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/resources&quot; element={&lt;Resources /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/complaints&quot; element={&lt;MyComplaints /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;/contributors&quot; element={&lt;Contributors /&gt;} /&gt;&#13;&#10;&#13;&#10;            {/* Protected Routes */}&#13;&#10;            &lt;Route&#13;&#10;              path=&quot;/admin&quot;&#13;&#10;              element={&#13;&#10;                &lt;RequireAdmin&gt;&#13;&#10;                  &lt;AdminDashboard /&gt;&#13;&#10;                &lt;/RequireAdmin&gt;&#13;&#10;              }&#13;&#10;            /&gt;&#13;&#10;            &lt;Route&#13;&#10;              path=&quot;/admin/dashboard&quot;&#13;&#10;              element={&#13;&#10;                &lt;PrivateRoute allowedRoles={['admin']}&gt;&#13;&#10;                  &lt;AdminDashboard /&gt;&#13;&#10;                &lt;/PrivateRoute&gt;&#13;&#10;              }&#13;&#10;            /&gt;&#13;&#10;            &lt;Route&#13;&#10;              path=&quot;/home&quot;&#13;&#10;              element={&#13;&#10;                &lt;PrivateRoute allowedRoles={['user', 'admin']}&gt;&#13;&#10;                  &lt;Home /&gt;&#13;&#10;                &lt;/PrivateRoute&gt;&#13;&#10;              }&#13;&#10;            /&gt;&#13;&#10;            &lt;Route&#13;&#10;              path=&quot;/user/dashboard&quot;&#13;&#10;              element={&#13;&#10;                &lt;PrivateRoute allowedRoles={['user', 'admin']}&gt;&#13;&#10;                  &lt;UserDashboard /&gt;&#13;&#10;                &lt;/PrivateRoute&gt;&#13;&#10;              }&#13;&#10;            /&gt;&#13;&#10;&#13;&#10;            {/* Errors */}&#13;&#10;            &lt;Route path=&quot;/500&quot; element={&lt;ServerError /&gt;} /&gt;&#13;&#10;            &lt;Route path=&quot;*&quot; element={&lt;Error404 /&gt;} /&gt;&#13;&#10;          &lt;/Routes&gt;&#13;&#10;        &lt;/AnimatePresence&gt;&#13;&#10;      &lt;/main&gt;&#13;&#10;&#13;&#10;      &lt;Footer /&gt;&#13;&#10;    &lt;/&gt;&#13;&#10;  );&#13;&#10;};&#13;&#10;&#13;&#10;export default App;&#13;&#10;// import ChatBot from './components/Chatbot';&#13;&#10;&#13;&#10;// // Add this to your Layout component's return statement&#13;&#10;// function Layout({ children }) {&#13;&#10;//   return (&#13;&#10;//     &lt;div className=&quot;relative min-h-screen&quot;&gt;&#13;&#10;//       {/* Your existing layout code */}&#13;&#10;//       {children}&#13;&#10;      &#13;&#10;//       {/* Add the ChatBot component at the end */}&#13;&#10;//       &lt;ChatBot /&gt;&#13;&#10;//     &lt;/div&gt;&#13;&#10;//   );&#13;&#10;// }" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/Pages/CommunityVoting.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Pages/CommunityVoting.css" />
              <option name="originalContent" value=".community-voting-container {&#10;  max-width: 800px;&#10;  margin: 0 auto;&#10;  padding: 20px;&#10;  font-family: Arial, sans-serif;&#10;  color: #111;&#10;  background-color: #fff;&#10;  font-size: 16px;&#10;  margin-bottom: 20px;&#10;}&#10;&#10;.filter-bar {&#10;  display: flex;&#10;  justify-content: space-between;&#10;  background: #f3f4f6;&#10;  padding: 15px;&#10;body.dark .filter-bar {&#10;  background: #1f2937;&#10;}&#10;&#10;.filter-section {&#10;  display: flex;&#10;  align-items: center;&#10;  margin: 5px 10px;&#10;}&#10;&#10;  margin-right: 10px;&#10;  font-weight: bold;&#10;body.dark .filter-bar {&#10;&#10;.filter-dropdown {&#10;  padding: 8px 12px;&#10;  border-radius: 20px;&#10;  border: 1px solid #d1d5db;&#10;  background: white;&#10;}&#10;&#10;.issues-list {&#10;  margin-top: 30px;&#10;}&#10;&#10;  box-shadow: 0 2px 5px rgba(0,0,0,0.1);&#10;}&#10;&#10;.issue-header {&#10;  display: flex;&#10;  justify-content: space-between;&#10;  align-items: center;&#10;  margin-bottom: 15px;&#10;}&#10;&#10;.metric {&#10;  display: flex;&#10;  flex-direction: column;&#10;}&#10;&#10;.metric-label {&#10;  font-size: 12px;&#10;  color: #6b7280;&#10;}&#10;.vote-section {&#10;  display: flex;&#10;  align-items: center;&#10;  gap: 15px;&#10;}&#10;&#10;.vote-button {&#10;  background: #10b981;&#10;  color: white;&#10;  display: flex;&#10;  align-items: center;&#10;  gap: 5px;&#10;}&#10;&#10;&#10;.progress-fill {&#10;  height: 100%;&#10;  background: #10b981;&#10;  border-radius: 4px;&#10;  transition: width 0.3s ease;&#10;}&#10;&#10;@media (max-width: 600px) {&#10;  .filter-bar {&#10;    flex-direction: column;&#10;    border-radius: 15px;&#10;  }&#10;&#10;  .issue-metrics {&#10;    flex-direction: column;&#10;" />
              <option name="updatedContent" value=".community-voting-container {&#13;&#10;  max-width: 800px;&#13;&#10;  margin: 0 auto;&#13;&#10;  padding: 20px;&#13;&#10;  font-family: Arial, sans-serif;&#13;&#10;  color: #111;&#13;&#10;  background-color: #fff;&#13;&#10;  transition: background-color 0.3s ease, color 0.3s ease;&#13;&#10;}&#13;&#10;&#13;&#10;/* Dark mode for main container */&#13;&#10;:root.dark .community-voting-container {&#13;&#10;  background-color: #0d131f;&#13;&#10;  color: #f3f4f6;&#13;&#10;}&#13;&#10;&#13;&#10;.back-button {&#13;&#10;  background: none;&#13;&#10;  border: none;&#13;&#10;  color: #10b981;&#13;&#10;  cursor: pointer;&#13;&#10;  font-size: 16px;&#13;&#10;  margin-bottom: 20px;&#13;&#10;  transition: color 0.3s ease;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .back-button {&#13;&#10;  color: #34d399;&#13;&#10;}&#13;&#10;&#13;&#10;.filter-bar {&#13;&#10;  display: flex;&#13;&#10;  justify-content: space-between;&#13;&#10;  background: #f3f4f6;&#13;&#10;  padding: 15px;&#13;&#10;  border-radius: 50px;&#13;&#10;  margin: 20px 0;&#13;&#10;  flex-wrap: wrap;&#13;&#10;  transition: background-color 0.3s ease;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .filter-bar {&#13;&#10;  background: #1f2937;&#13;&#10;}&#13;&#10;&#13;&#10;.filter-section {&#13;&#10;  display: flex;&#13;&#10;  align-items: center;&#13;&#10;  margin: 5px 10px;&#13;&#10;}&#13;&#10;&#13;&#10;.filter-section label {&#13;&#10;  margin-right: 10px;&#13;&#10;  font-weight: bold;&#13;&#10;  transition: color 0.3s ease;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .filter-section label {&#13;&#10;  color: #e5e7eb;&#13;&#10;}&#13;&#10;&#13;&#10;.filter-dropdown {&#13;&#10;  padding: 8px 12px;&#13;&#10;  border-radius: 20px;&#13;&#10;  border: 1px solid #d1d5db;&#13;&#10;  background: white;&#13;&#10;  color: #111;&#13;&#10;  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .filter-dropdown {&#13;&#10;  background: #374151;&#13;&#10;  color: #f3f4f6;&#13;&#10;  border-color: #4b5563;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .filter-dropdown option {&#13;&#10;  background: #374151;&#13;&#10;  color: #f3f4f6;&#13;&#10;}&#13;&#10;&#13;&#10;.issues-list {&#13;&#10;  margin-top: 30px;&#13;&#10;}&#13;&#10;&#13;&#10;.issue-card {&#13;&#10;  background: white;&#13;&#10;  border-radius: 10px;&#13;&#10;  padding: 20px;&#13;&#10;  margin-bottom: 20px;&#13;&#10;  box-shadow: 0 2px 5px rgba(0,0,0,0.1);&#13;&#10;  transition: background-color 0.3s ease, box-shadow 0.3s ease;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .issue-card {&#13;&#10;  background: #1f2937;&#13;&#10;  box-shadow: 0 2px 5px rgba(0,0,0,0.3);&#13;&#10;}&#13;&#10;&#13;&#10;.issue-header {&#13;&#10;  display: flex;&#13;&#10;  justify-content: space-between;&#13;&#10;  align-items: center;&#13;&#10;  margin-bottom: 15px;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .issue-header h3 {&#13;&#10;  color: #f3f4f6;&#13;&#10;}&#13;&#10;&#13;&#10;.area-badge {&#13;&#10;  background: #e5e7eb;&#13;&#10;  padding: 5px 10px;&#13;&#10;  border-radius: 15px;&#13;&#10;  font-size: 14px;&#13;&#10;  color: #374151;&#13;&#10;  transition: background-color 0.3s ease, color 0.3s ease;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .area-badge {&#13;&#10;  background: #374151;&#13;&#10;  color: #e5e7eb;&#13;&#10;}&#13;&#10;&#13;&#10;.issue-metrics {&#13;&#10;  display: flex;&#13;&#10;  gap: 20px;&#13;&#10;  margin-bottom: 15px;&#13;&#10;}&#13;&#10;&#13;&#10;.metric {&#13;&#10;  display: flex;&#13;&#10;  flex-direction: column;&#13;&#10;}&#13;&#10;&#13;&#10;.metric-label {&#13;&#10;  font-size: 12px;&#13;&#10;  color: #6b7280;&#13;&#10;  transition: color 0.3s ease;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .metric-label {&#13;&#10;  color: #9ca3af;&#13;&#10;}&#13;&#10;&#13;&#10;.metric-value {&#13;&#10;  font-weight: bold;&#13;&#10;  font-size: 16px;&#13;&#10;  transition: color 0.3s ease;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .metric-value {&#13;&#10;  color: #f3f4f6;&#13;&#10;}&#13;&#10;&#13;&#10;.vote-section {&#13;&#10;  display: flex;&#13;&#10;  align-items: center;&#13;&#10;  gap: 15px;&#13;&#10;}&#13;&#10;&#13;&#10;.vote-button {&#13;&#10;  background: #10b981;&#13;&#10;  color: white;&#13;&#10;  border: none;&#13;&#10;  padding: 8px 15px;&#13;&#10;  border-radius: 20px;&#13;&#10;  cursor: pointer;&#13;&#10;  display: flex;&#13;&#10;  align-items: center;&#13;&#10;  gap: 5px;&#13;&#10;  transition: background-color 0.3s ease;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .vote-button {&#13;&#10;  background: #059669;&#13;&#10;}&#13;&#10;&#13;&#10;.vote-button:hover {&#13;&#10;  background: #059669;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .vote-button:hover {&#13;&#10;  background: #047857;&#13;&#10;}&#13;&#10;&#13;&#10;.progress-bar {&#13;&#10;  flex-grow: 1;&#13;&#10;  height: 8px;&#13;&#10;  background: #e5e7eb;&#13;&#10;  border-radius: 4px;&#13;&#10;  overflow: hidden;&#13;&#10;  transition: background-color 0.3s ease;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .progress-bar {&#13;&#10;  background: #374151;&#13;&#10;}&#13;&#10;&#13;&#10;.progress-fill {&#13;&#10;  height: 100%;&#13;&#10;  background: #10b981;&#13;&#10;  border-radius: 4px;&#13;&#10;  transition: width 0.3s ease, background-color 0.3s ease;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .progress-fill {&#13;&#10;  background: #34d399;&#13;&#10;}&#13;&#10;&#13;&#10;/* Page heading styles for dark mode */&#13;&#10;:root.dark .community-voting-container h1 {&#13;&#10;  color: #f3f4f6;&#13;&#10;}&#13;&#10;&#13;&#10;:root.dark .community-voting-container p {&#13;&#10;  color: #d1d5db;&#13;&#10;}&#13;&#10;&#13;&#10;@media (max-width: 600px) {&#13;&#10;  .filter-bar {&#13;&#10;    flex-direction: column;&#13;&#10;    border-radius: 15px;&#13;&#10;  }&#13;&#10;&#13;&#10;  .issue-metrics {&#13;&#10;    flex-direction: column;&#13;&#10;    gap: 10px;&#13;&#10;  }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/Pages/Resources.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Pages/Resources.jsx" />
              <option name="originalContent" value="import React, { useState } from 'react';&#10;import { ArrowLeft, Scale, Info, Phone, HelpCircle, ChevronDown, ChevronUp, FileText } from 'lucide-react';&#10;&#10;&#10;  {&#10;    question: &quot;Can I file a complaint anonymously?&quot;,&#10;    answer: &quot;Currently, you must register to file a complaint so authorities can track and respond.&quot;&#10;  },&#10;  {&#10;    question: &quot;What happens after I submit a complaint?&quot;,&#10;    answer: &quot;Your complaint is reviewed by the appropriate department and progress is tracked.&quot;&#10;  },&#10;  {&#10;    question: &quot;How long does it take to resolve?&quot;,&#10;    answer: &quot;Timelines vary, but we aim to address issues within 7 working days.&quot;&#10;  },&#10;  {&#10;    question: &quot;Will I be notified of status changes?&quot;,&#10;    answer: &quot;Yes, you'll receive email or dashboard updates on status changes.&quot;&#10;  }&#10;            &lt;div className=&quot;flex items-center gap-4 mb-6&quot;&gt;&#10;              &lt;div className=&quot;flex items-center justify-center w-12 h-12 bg-gradient-to-r from-emerald-500 to-teal-500 rounded-xl&quot;&gt;&#10;                &lt;Info className=&quot;w-6 h-6 text-white&quot; /&gt;&#10;  const [openIndex, setOpenIndex] = useState(null);&#10;              &lt;h2 className=&quot;text-2xl font-semibold text-gray-800 dark:text-gray-200&quot;&gt;&#10;  const toggleFAQ = (index) =&gt; {&#10;    setOpenIndex(openIndex === index ? null : index);&#10;  };&#10;            &lt;ol className=&quot;space-y-4&quot;&gt;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gradient-to-br from-green-50 via-emerald-50 to-teal-50 dark:from-gray-900 dark:via-gray-800 dark:to-emerald-900/20 relative overflow-hidden&quot;&gt;&#10;      &lt;div className=&quot;absolute top-10 left-10 w-72 h-72 bg-gradient-to-r from-green-300/30 to-emerald-300/30 dark:from-green-600/20 dark:to-emerald-600/20 rounded-full mix-blend-multiply filter blur-xl animate-pulse&quot;&gt;&lt;/div&gt;&#10;      &lt;div className=&quot;absolute top-40 right-10 w-96 h-96 bg-gradient-to-r from-emerald-300/30 to-teal-300/30 dark:from-emerald-600/20 dark:to-teal-600/20 rounded-full mix-blend-multiply filter blur-xl animate-pulse delay-1000&quot;&gt;&lt;/div&gt;&#10;      &lt;div className=&quot;absolute -bottom-8 left-20 w-80 h-80 bg-gradient-to-r from-teal-300/30 to-green-300/30 dark:from-teal-600/20 dark:to-green-600/20 rounded-full mix-blend-multiply filter blur-xl animate-pulse delay-2000&quot;&gt;&lt;/div&gt;&#10;              ].map((step, index) =&gt; (&#10;      &lt;div className=&quot;relative z-10 p-6&quot;&gt;&#10;        &lt;button&#10;          onClick={() =&gt; window.history.back()}&#10;          className=&quot;group inline-flex items-center gap-2 px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-lg border border-gray-200 dark:border-gray-700 hover:bg-white dark:hover:bg-gray-800 hover:shadow-lg transition-all duration-200 hover:scale-105&quot;&#10;          type=&quot;button&quot;&#10;          aria-label=&quot;Go back&quot;&#10;        &gt;&#10;          &lt;ArrowLeft className=&quot;w-4 h-4 group-hover:-translate-x-1 transition-transform duration-200&quot; /&gt;&#10;          Back&#10;        &lt;/button&gt;&#10;      &lt;/div&gt;&#10;            &lt;div className=&quot;flex items-center gap-4 mb-6&quot;&gt;&#10;      &lt;div className=&quot;relative z-10 max-w-4xl mx-auto px-6 pb-12&quot;&gt;&#10;        &lt;div className=&quot;text-center mb-12&quot;&gt;&#10;          &lt;h1 className=&quot;text-4xl md:text-5xl font-bold bg-gradient-to-r from-green-600 via-emerald-600 to-teal-600 dark:from-green-400 dark:via-emerald-400 dark:to-teal-400 bg-clip-text text-transparent mb-4&quot;&gt;&#10;            Citizen Resources&#10;          &lt;/h1&gt;&#10;          &lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto&quot;&gt;&#10;            Everything you need to know about filing complaints and accessing civic services&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;                { name: &quot;Police&quot;, number: &quot;100&quot; },&#10;        &lt;div className=&quot;grid gap-8&quot;&gt;&#10;          &lt;section className=&quot;group bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm rounded-2xl p-8 border border-gray-200/50 dark:border-gray-700/50 hover:shadow-xl hover:shadow-green-500/10 dark:hover:shadow-emerald-500/10 transition-all duration-300 hover:-translate-y-1&quot;&gt;&#10;            &lt;div className=&quot;flex items-center gap-4 mb-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center justify-center w-12 h-12 bg-gradient-to-r from-green-500 to-emerald-500 rounded-xl&quot;&gt;&#10;                &lt;Scale className=&quot;w-6 h-6 text-white&quot; /&gt;&#10;              &lt;/div&gt;&#10;              &lt;h2 className=&quot;text-2xl font-semibold text-gray-800 dark:text-gray-200&quot;&gt;&#10;                Your Rights &amp; Responsibilities&#10;              &lt;/h2&gt;&#10;            &lt;/div&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#10;              You have the right to file civic complaints and receive timely updates. Please note that misuse or filing false complaints may lead to appropriate action being taken.&#10;            &lt;/p&gt;&#10;          &lt;/section&gt;&#10;              &lt;div className=&quot;flex items-center justify-center w-12 h-12 bg-gradient-to-r from-green-600 to-teal-600 rounded-xl&quot;&gt;&#10;          &lt;section className=&quot;group bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm rounded-2xl p-8 border border-gray-200/50 dark:border-gray-700/50 hover:shadow-xl hover:shadow-green-500/10 dark:hover:shadow-emerald-500/10 transition-all duration-300 hover:-translate-y-1&quot;&gt;&#10;            &lt;div className=&quot;flex items-center gap-4 mb-6&quot;&gt;&#10;              &lt;div className=&quot;flex items-center justify-center w-12 h-12 bg-gradient-to-r from-emerald-500 to-teal-500 rounded-xl&quot;&gt;&#10;                &lt;Info className=&quot;w-6 h-6 text-white&quot; /&gt;&#10;              &lt;/div&gt;&#10;              &lt;h2 className=&quot;text-2xl font-semibold text-gray-800 dark:text-gray-200&quot;&gt;&#10;                How to File a Complaint&#10;              &lt;/h2&gt;&#10;            &lt;/div&gt;&#10;            &lt;ol className=&quot;space-y-4&quot;&gt;&#10;              {[&#10;                &quot;Login to your account using your credentials&quot;,&#10;                &quot;Click \&quot;File a Complaint\&quot; from your dashboard&quot;,&#10;                &quot;Provide complete and accurate issue details&quot;,&#10;                &quot;Submit your complaint and track the status anytime&quot;&#10;              ].map((step, index) =&gt; (&#10;                &lt;li key={index} className=&quot;flex items-start gap-4&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center justify-center w-8 h-8 bg-gradient-to-r from-green-400 to-emerald-400 dark:from-green-500 dark:to-emerald-500 rounded-full text-white text-sm font-semibold flex-shrink-0 mt-0.5&quot;&gt;&#10;                    {index + 1}&#10;                  &lt;/div&gt;&#10;                  &lt;span className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;{step}&lt;/span&gt;&#10;                &lt;/li&gt;&#10;              ))}&#10;            &lt;/ol&gt;&#10;          &lt;/section&gt;&#10;                    onClick={() =&gt; toggleFAQ(index)}&#10;          &lt;section className=&quot;group bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm rounded-2xl p-8 border border-gray-200/50 dark:border-gray-700/50 hover:shadow-xl hover:shadow-green-500/10 dark:hover:shadow-emerald-500/10 transition-all duration-300 hover:-translate-y-1&quot;&gt;&#10;            &lt;div className=&quot;flex items-center gap-4 mb-6&quot;&gt;&#10;              &lt;div className=&quot;flex items-center justify-center w-12 h-12 bg-gradient-to-r from-teal-500 to-green-500 rounded-xl&quot;&gt;&#10;                &lt;Phone className=&quot;w-6 h-6 text-white&quot; /&gt;&#10;              &lt;/div&gt;&#10;              &lt;h2 className=&quot;text-2xl font-semibold text-gray-800 dark:text-gray-200&quot;&gt;&#10;                Emergency Contacts&#10;              &lt;/h2&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;grid md:grid-cols-2 gap-4&quot;&gt;&#10;              {[&#10;                { name: &quot;Police&quot;, number: &quot;100&quot; },&#10;                { name: &quot;Fire&quot;, number: &quot;101&quot; },&#10;                { name: &quot;Women Helpline&quot;, number: &quot;1091&quot; },&#10;                { name: &quot;Child Helpline&quot;, number: &quot;1098&quot; },&#10;                { name: &quot;Cyber Crime&quot;, number: &quot;155260&quot; }&#10;              ].map((contact, index) =&gt; (&#10;                &lt;div key={index} className=&quot;flex items-center justify-between p-4 bg-gradient-to-r from-green-50 to-emerald-50 dark:from-gray-700/50 dark:to-emerald-900/20 rounded-xl border border-green-100 dark:border-gray-600/50&quot;&gt;&#10;                  &lt;span className=&quot;font-medium text-gray-700 dark:text-gray-300&quot;&gt;{contact.name}&lt;/span&gt;&#10;                  &lt;span className=&quot;font-bold text-green-600 dark:text-green-400 text-lg&quot;&gt;{contact.number}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/section&gt;&#10;            &lt;/div&gt;&#10;          &lt;section className=&quot;group bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm rounded-2xl p-8 border border-gray-200/50 dark:border-gray-700/50 hover:shadow-xl hover:shadow-green-500/10 dark:hover:shadow-emerald-500/10 transition-all duration-300 hover:-translate-y-1&quot;&gt;&#10;            &lt;div className=&quot;flex items-center gap-4 mb-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center justify-center w-12 h-12 bg-gradient-to-r from-green-600 to-teal-600 rounded-xl&quot;&gt;&#10;                &lt;FileText className=&quot;w-6 h-6 text-white&quot; /&gt;&#10;              &lt;/div&gt;&#10;              &lt;h2 className=&quot;text-2xl font-semibold text-gray-800 dark:text-gray-200&quot;&gt;&#10;                Related Laws &amp; Acts&#10;              &lt;/h2&gt;&#10;            &lt;/div&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#10;              Access simplified summaries of local civic laws, nuisance acts, and safety regulations that govern citizen services and complaint procedures.&#10;            &lt;/p&gt;&#10;          &lt;/section&gt;&#10;" />
              <option name="updatedContent" value="import React, { useState, useRef, useEffect } from 'react';&#10;import { ArrowLeft, Scale, Info, Phone, HelpCircle, ChevronDown, ChevronUp, FileText } from 'lucide-react';&#10;&#10;// Custom Animated Accordion Component&#10;const AnimatedAccordion = ({ item, index, isOpen, onToggle }) =&gt; {&#10;&#9;const contentRef = useRef(null);&#10;&#9;const [height, setHeight] = useState(0);&#10;&#10;&#9;useEffect(() =&gt; {&#10;&#9;&#9;if (contentRef.current) {&#10;&#9;&#9;&#9;setHeight(isOpen ? contentRef.current.scrollHeight : 0);&#10;&#9;&#9;}&#10;&#9;}, [isOpen]);&#10;&#10;&#9;return (&#10;&#9;&#9;&lt;div className=&quot;border border-gray-200 dark:border-gray-600 rounded-xl overflow-hidden bg-gradient-to-r from-green-50/50 to-emerald-50/50 dark:from-gray-700/30 dark:to-emerald-900/10&quot;&gt;&#10;&#9;&#9;&#9;&lt;button&#10;&#9;&#9;&#9;&#9;className=&quot;w-full px-6 py-4 text-left flex items-center justify-between hover:bg-green-50 dark:hover:bg-gray-700/50 transition-all duration-300 ease-in-out&quot;&#10;&#9;&#9;&#9;&#9;onClick={() =&gt; onToggle(index)}&#10;&#9;&#9;&#9;&#9;aria-expanded={isOpen}&#10;&#9;&#9;&#9;&#9;aria-controls={`faq-answer-${index}`}&#10;&#9;&#9;&#9;&#9;id={`faq-question-${index}`}&#10;&#9;&#9;&#9;&gt;&#10;&#9;&#9;&#9;&#9;&lt;span className=&quot;font-medium text-gray-800 dark:text-gray-200 pr-4&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;{item.question}&#10;&#9;&#9;&#9;&#9;&lt;/span&gt;&#10;&#9;&#9;&#9;&#9;&lt;div&#10;&#9;&#9;&#9;&#9;&#9;className={`flex items-center justify-center w-8 h-8 bg-green-100 dark:bg-green-800/30 rounded-full flex-shrink-0 transition-all duration-300 ease-in-out ${&#10;&#9;&#9;&#9;&#9;&#9;&#9;isOpen ? 'rotate-180 bg-green-200 dark:bg-green-700/50' : ''&#10;&#9;&#9;&#9;&#9;&#9;}`}&#10;&#9;&#9;&#9;&#9;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;ChevronDown className=&quot;w-4 h-4 text-green-600 dark:text-green-400 transition-transform duration-300 ease-in-out&quot; /&gt;&#10;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&lt;/button&gt;&#10;&#9;&#9;&#9;&lt;div&#10;&#9;&#9;&#9;&#9;className=&quot;overflow-hidden transition-all duration-500 ease-in-out&quot;&#10;&#9;&#9;&#9;&#9;style={{ height: `${height}px` }}&#10;&#9;&#9;&#9;&gt;&#10;&#9;&#9;&#9;&#9;&lt;div&#10;&#9;&#9;&#9;&#9;&#9;ref={contentRef}&#10;&#9;&#9;&#9;&#9;&#9;className={`px-6 py-4 bg-white/50 dark:bg-gray-800/50 border-t border-gray-200 dark:border-gray-600 transform transition-all duration-300 ease-in-out ${&#10;&#9;&#9;&#9;&#9;&#9;&#9;isOpen ? 'translate-y-0 opacity-100' : '-translate-y-2 opacity-0'&#10;&#9;&#9;&#9;&#9;&#9;}`}&#10;&#9;&#9;&#9;&#9;&#9;id={`faq-answer-${index}`}&#10;&#9;&#9;&#9;&#9;&#9;role=&quot;region&quot;&#10;&#9;&#9;&#9;&#9;&#9;aria-labelledby={`faq-question-${index}`}&#10;&#9;&#9;&#9;&#9;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;{item.answer}&#10;&#9;&#9;&#9;&#9;&#9;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&lt;/div&gt;&#10;&#9;);&#10;};&#10;&#10;const faqData = [&#10;&#9;{&#10;&#9;&#9;question: 'Can I file a complaint anonymously?',&#10;&#9;&#9;answer: 'Currently, you must register to file a complaint so authorities can track and respond.',&#10;&#9;},&#10;&#9;{&#10;&#9;&#9;question: 'What happens after I submit a complaint?',&#10;&#9;&#9;answer: 'Your complaint is reviewed by the appropriate department and progress is tracked.',&#10;&#9;},&#10;&#9;{&#10;&#9;&#9;question: 'How long does it take to resolve?',&#10;&#9;&#9;answer: 'Timelines vary, but we aim to address issues within 7 working days.',&#10;&#9;},&#10;&#9;{&#10;&#9;&#9;question: 'Will I be notified of status changes?',&#10;&#9;&#9;answer: &quot;Yes, you'll receive email or dashboard updates on status changes.&quot;,&#10;&#9;},&#10;];&#10;&#10;const Resources = () =&gt; {&#10;&#9;const [openIndex, setOpenIndex] = useState(null);&#10;&#10;&#9;const toggleFAQ = (index) =&gt; {&#10;&#9;&#9;setOpenIndex(openIndex === index ? null : index);&#10;&#9;};&#10;&#10;&#9;return (&#10;&#9;&#9;&lt;div className=&quot;min-h-screen bg-gradient-to-br from-green-50 via-emerald-50 to-teal-50 dark:from-gray-900 dark:via-gray-800 dark:to-emerald-900/20 relative overflow-hidden&quot;&gt;&#10;&#9;&#9;&#9;&lt;div className=&quot;absolute top-10 left-10 w-72 h-72 bg-gradient-to-r from-green-300/30 to-emerald-300/30 dark:from-green-600/20 dark:to-emerald-600/20 rounded-full mix-blend-multiply filter blur-xl animate-pulse&quot;&gt;&lt;/div&gt;&#10;&#9;&#9;&#9;&lt;div className=&quot;absolute top-40 right-10 w-96 h-96 bg-gradient-to-r from-emerald-300/30 to-teal-300/30 dark:from-emerald-600/20 dark:to-teal-600/20 rounded-full mix-blend-multiply filter blur-xl animate-pulse delay-1000&quot;&gt;&lt;/div&gt;&#10;&#9;&#9;&#9;&lt;div className=&quot;absolute -bottom-8 left-20 w-80 h-80 bg-gradient-to-r from-teal-300/30 to-green-300/30 dark:from-teal-600/20 dark:to-green-600/20 rounded-full mix-blend-multiply filter blur-xl animate-pulse delay-2000&quot;&gt;&lt;/div&gt;&#10;&#10;&#9;&#9;&#9;&lt;div className=&quot;relative z-10 p-6&quot;&gt;&#10;&#9;&#9;&#9;&#9;&lt;button&#10;&#9;&#9;&#9;&#9;&#9;onClick={() =&gt; window.history.back()}&#10;&#9;&#9;&#9;&#9;&#9;className=&quot;group inline-flex items-center gap-2 px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-lg border border-gray-200 dark:border-gray-700 hover:bg-white dark:hover:bg-gray-800 hover:shadow-lg transition-all duration-200 hover:scale-105&quot;&#10;&#9;&#9;&#9;&#9;&#9;type=&quot;button&quot;&#10;&#9;&#9;&#9;&#9;&#9;aria-label=&quot;Go back&quot;&#10;&#9;&#9;&#9;&#9;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;ArrowLeft className=&quot;w-4 h-4 group-hover:-translate-x-1 transition-transform duration-200&quot; /&gt;&#10;&#9;&#9;&#9;&#9;&#9;Back&#10;&#9;&#9;&#9;&#9;&lt;/button&gt;&#10;&#9;&#9;&#9;&lt;/div&gt;&#10;&#10;&#9;&#9;&#9;&lt;div className=&quot;relative z-10 max-w-4xl mx-auto px-6 pb-12&quot;&gt;&#10;&#9;&#9;&#9;&#9;&lt;div className=&quot;text-center mb-12&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;h1 className=&quot;text-4xl md:text-5xl font-bold bg-gradient-to-r from-green-600 via-emerald-600 to-teal-600 dark:from-green-400 dark:via-emerald-400 dark:to-teal-400 bg-clip-text text-transparent mb-4&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;Citizen Resources&#10;&#9;&#9;&#9;&#9;&#9;&lt;/h1&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;Everything you need to know about filing complaints and accessing civic services&#10;&#9;&#9;&#9;&#9;&#9;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#10;&#9;&#9;&#9;&#9;&lt;div className=&quot;grid gap-8&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;section className=&quot;group bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm rounded-2xl p-8 border border-gray-200/50 dark:border-gray-700/50 hover:shadow-xl hover:shadow-green-500/10 dark:hover:shadow-emerald-500/10 transition-all duration-300 hover:-translate-y-1&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex items-center gap-4 mb-4&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex items-center justify-center w-12 h-12 bg-gradient-to-r from-green-500 to-emerald-500 rounded-xl&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;Scale className=&quot;w-6 h-6 text-white&quot; /&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;h2 className=&quot;text-2xl font-semibold text-gray-800 dark:text-gray-200&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Your Rights &amp; Responsibilities&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/h2&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;You have the right to file civic complaints and receive timely updates. Please note that misuse or&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;filing false complaints may lead to appropriate action being taken.&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/section&gt;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&lt;section className=&quot;group bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm rounded-2xl p-8 border border-gray-200/50 dark:border-gray-700/50 hover:shadow-xl hover:shadow-green-500/10 dark:hover:shadow-emerald-500/10 transition-all duration-300 hover:-translate-y-1&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex items-center gap-4 mb-6&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex items-center justify-center w-12 h-12 bg-gradient-to-r from-emerald-500 to-teal-500 rounded-xl&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;Info className=&quot;w-6 h-6 text-white&quot; /&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;h2 className=&quot;text-2xl font-semibold text-gray-800 dark:text-gray-200&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;How to File a Complaint&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/h2&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ol className=&quot;space-y-4&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{[&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;'Login to your account using your credentials',&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;'Click &quot;File a Complaint&quot; from your dashboard',&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;'Provide complete and accurate issue details',&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;'Submit your complaint and track the status anytime',&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;].map((step, index) =&gt; (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;li key={index} className=&quot;flex items-start gap-4&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex items-center justify-center w-8 h-8 bg-gradient-to-r from-green-400 to-emerald-400 dark:from-green-500 dark:to-emerald-500 rounded-full text-white text-sm font-semibold flex-shrink-0 mt-0.5&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{index + 1}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;span className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;{step}&lt;/span&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/li&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;))}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/ol&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/section&gt;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&lt;section className=&quot;group bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm rounded-2xl p-8 border border-gray-200/50 dark:border-gray-700/50 hover:shadow-xl hover:shadow-green-500/10 dark:hover:shadow-emerald-500/10 transition-all duration-300 hover:-translate-y-1&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex items-center gap-4 mb-6&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex items-center justify-center w-12 h-12 bg-gradient-to-r from-teal-500 to-green-500 rounded-xl&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;Phone className=&quot;w-6 h-6 text-white&quot; /&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;h2 className=&quot;text-2xl font-semibold text-gray-800 dark:text-gray-200&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Emergency Contacts&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/h2&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;grid md:grid-cols-2 gap-4&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{[&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{ name: 'Police', number: '100' },&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{ name: 'Fire', number: '101' },&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{ name: 'Women Helpline', number: '1091' },&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{ name: 'Child Helpline', number: '1098' },&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{ name: 'Cyber Crime', number: '155260' },&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;].map((contact, index) =&gt; (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;key={index}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;className=&quot;flex items-center justify-between p-4 bg-gradient-to-r from-green-50 to-emerald-50 dark:from-gray-700/50 dark:to-emerald-900/20 rounded-xl border border-green-100 dark:border-gray-600/50&quot;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;span className=&quot;font-medium text-gray-700 dark:text-gray-300&quot;&gt;{contact.name}&lt;/span&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;span className=&quot;font-bold text-green-600 dark:text-green-400 text-lg&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{contact.number}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/span&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;))}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/section&gt;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&lt;section className=&quot;group bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm rounded-2xl p-8 border border-gray-200/50 dark:border-gray-700/50 hover:shadow-xl hover:shadow-green-500/10 dark:hover:shadow-emerald-500/10 transition-all duration-300 hover:-translate-y-1&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex items-center gap-4 mb-4&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex items-center justify-center w-12 h-12 bg-gradient-to-r from-green-600 to-teal-600 rounded-xl&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;FileText className=&quot;w-6 h-6 text-white&quot; /&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;h2 className=&quot;text-2xl font-semibold text-gray-800 dark:text-gray-200&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Related Laws &amp; Acts&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/h2&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Access simplified summaries of local civic laws, nuisance acts, and safety regulations that govern&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;citizen services and complaint procedures.&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/section&gt;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&lt;section className=&quot;group bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm rounded-2xl p-8 border border-gray-200/50 dark:border-gray-700/50 hover:shadow-xl hover:shadow-green-500/10 dark:hover:shadow-emerald-500/10 transition-all duration-300 hover:-translate-y-1&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex items-center gap-4 mb-6&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;flex items-center justify-center w-12 h-12 bg-gradient-to-r from-emerald-600 to-green-600 rounded-xl&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;HelpCircle className=&quot;w-6 h-6 text-white&quot; /&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;h2 className=&quot;text-2xl font-semibold text-gray-800 dark:text-gray-200&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Frequently Asked Questions&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/h2&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;space-y-4&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{faqData.map((item, index) =&gt; (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;AnimatedAccordion&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;key={index}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;item={item}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;index={index}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;isOpen={openIndex === index}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;onToggle={toggleFAQ}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;))}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/section&gt;&#10;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&lt;/div&gt;&#10;&#9;);&#10;};&#10;&#10;export default Resources;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/Navbar.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/Navbar.jsx" />
              <option name="originalContent" value="// import React from 'react';&#10;// import { useNavigate } from 'react-router-dom';&#10;// import Switch from '../DarkModeToggle';&#10;&#10;// const Navbar = () =&gt; {&#10;//   const navigate = useNavigate();&#10;&#10;//   const scrollToTop = () =&gt; {&#10;//     window.scrollTo({ top: 0, behavior: 'smooth' });&#10;//   };&#10;&#10;//   return (&#10;//     &lt;header&#10;//       className=&quot;sticky top-0 z-50 w-full border-b bg-white/95 dark:bg-[hsla(240,5%,15%,0.8)] backdrop-blur&quot;&#10;//       style={{&#10;//         '--tw-bg-opacity': '0.95',&#10;//         backgroundColor: 'rgba(255, 255, 255, 0.95)'&#10;//       }}&#10;//     &gt;&#10;//       &lt;div className=&quot;container flex h-14 items-center justify-between&quot;&gt;&#10;//         &lt;button onClick={scrollToTop} className=&quot;flex items-center gap-2 hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//           &lt;svg&#10;//             xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;//             width=&quot;24&quot;&#10;//             height=&quot;24&quot;&#10;//             viewBox=&quot;0 0 24 24&quot;&#10;//             fill=&quot;none&quot;&#10;//             stroke=&quot;currentColor&quot;&#10;//             strokeWidth=&quot;2&quot;&#10;//             strokeLinecap=&quot;round&quot;&#10;//             strokeLinejoin=&quot;round&quot;&#10;//             className=&quot;h-6 w-6 text-emerald-500&quot;&#10;//           &gt;&#10;//             &lt;path d=&quot;M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z&quot; /&gt;&#10;//             &lt;circle cx=&quot;12&quot; cy=&quot;10&quot; r=&quot;3&quot; /&gt;&#10;//           &lt;/svg&gt;&#10;//           &lt;span className=&quot;text-xl font-bold&quot;&gt;Civix&lt;/span&gt;&#10;//         &lt;/button&gt;&#10;//         &lt;nav className=&quot;hidden md:flex gap-6&quot;&gt;&#10;//           &lt;a href=&quot;#features&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Features&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#how-it-works&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             How It Works&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#testimonials&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Testimonials&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#faq&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             FAQ&#10;//           &lt;/a&gt;&#10;//         &lt;/nav&gt;&#10;//         &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;//           &lt;Switch /&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/login')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Login&#10;//           &lt;/button&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/signup')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-primary-foreground hover:bg-emerald-500/90 h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Get Started&#10;//           &lt;/button&gt;&#10;//         &lt;/div&gt;&#10;//       &lt;/div&gt;&#10;//     &lt;/header&gt;&#10;//   );&#10;// };&#10;&#10;// export default Navbar;&#10;&#10;&#10;import React, { useState, useEffect } from 'react';&#10;import { useNavigate, Link, href } from 'react-router-dom';&#10;import Switch from '../DarkModeToggle';&#10;import { jwtDecode } from 'jwt-decode';&#10;import { useAuth } from '@clerk/clerk-react';&#10;import logo from './logoo.svg';&#10;&#10;const Navbar = () =&gt; {&#10;  const navigate = useNavigate();&#10;  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);&#10;  const { isSignedIn, signOut } = useAuth();&#10;&#10;  // Close menu on route change or navigation&#10;  const handleNav = (cb) =&gt; {&#10;    setMobileMenuOpen(false);&#10;    if (cb) cb();&#10;  };&#10;&#10;  // Handle logout&#10;  const handleLogout = async () =&gt; {&#10;    if (signOut) {&#10;      await signOut(); // Clerk: clears session and data&#10;    }&#10;    localStorage.removeItem(&quot;token&quot;);&#10;    window.dispatchEvent(new Event(&quot;storage-update&quot;));&#10;    navigate(&quot;/&quot;);&#10;  };&#10;&#10;  // Close menu on Escape key&#10;  useEffect(() =&gt; {&#10;    if (!mobileMenuOpen) return;&#10;    const onKeyDown = (e) =&gt; {&#10;      if (e.key === 'Escape') setMobileMenuOpen(false);&#10;    };&#10;    window.addEventListener('keydown', onKeyDown);&#10;    return () =&gt; window.removeEventListener('keydown', onKeyDown);&#10;  }, [mobileMenuOpen]);&#10;&#10;  // Close menu when clicking outside&#10;  useEffect(() =&gt; {&#10;    if (!mobileMenuOpen) return;&#10;    const onClick = (e) =&gt; {&#10;      if (e.target.closest('#mobile-nav-panel') || e.target.closest('#mobile-nav-toggle')) return;&#10;      setMobileMenuOpen(false);&#10;    };&#10;    document.addEventListener('mousedown', onClick);&#10;    return () =&gt; document.removeEventListener('mousedown', onClick);&#10;  }, [mobileMenuOpen]);&#10;&#10;  // ✅ Check if logged-in user is admin&#10;  const token = localStorage.getItem('token');&#10;  let isAdmin = false;&#10;&#10;  try {&#10;    if (token) {&#10;      const decoded = jwtDecode(token);&#10;      isAdmin = decoded.role === 'admin';&#10;    }&#10;  } catch (err) {&#10;    console.error('Invalid token');&#10;  }&#10;&#10;  const navLinks = [&#10;    {&#10;      title: &quot;Civic Education &amp; Rights&quot;,&#10;      href: &quot;/civic-education&quot;&#10;    },&#10;    {&#10;      title: &quot;About&quot;,&#10;      href: &quot;/about&quot;&#10;    },&#10;    {&#10;      title: &quot;Contact Us&quot;,&#10;      href: &quot;/contact&quot;&#10;    },&#10;    {&#10;      title: &quot;Our contributors&quot;,&#10;      href: &quot;/contributors&quot;&#10;    },&#10;&#10;  ]&#10;&#10;  return (&#10;    &lt;header className=&quot;sticky top-0 z-50 w-full border-b bg-white/95 dark:bg-[hsla(240,5%,15%,0.8)] backdrop-blur&quot;&gt;&#10;      &lt;div className=&quot;container flex h-14 items-center justify-between&quot;&gt;&#10;        &lt;button onClick={() =&gt; { setMobileMenuOpen(false); navigate('/'); }} className=&quot;flex items-center gap-2 hover:text-emerald-500 transition-colors duration-300&quot; style={{ width: &quot;74px&quot;, marginLeft: &quot;21px&quot; }}&#10;        &gt;&#10;&#10;          &lt;img src={logo} alt=&quot;&quot; /&gt;&#10;          &lt;span id=&quot;logo&quot; className=&quot;text-xl font-bold&quot; onClick={() =&gt; window.scrollTo({ top: 0, behavior: 'smooth' })}&gt;  &lt;/span&gt;&#10;        &lt;/button&gt;&#10;&#10;        {/* Desktop nav - only show on large screens */}&#10;        &lt;nav className=&quot;hidden lg:flex gap-6&quot;&gt;&#10;          {navLinks.map((navItem) =&gt; (&#10;            &lt;Link key={navItem.title}&#10;              to={navItem.href}&#10;              className='text-sm font-medium hover:text-emerald-500 transition-colors duration-300'&#10;            &gt;&#10;              {navItem.title}&#10;            &lt;/Link&gt;&#10;          ))}&#10;        &lt;/nav&gt;&#10;&#10;&#10;        {/* Hamburger for mobile and tablet */}&#10;        &lt;button&#10;          id=&quot;mobile-nav-toggle&quot;&#10;          className=&quot;lg:hidden flex items-center justify-center p-2 rounded focus:outline-none focus:ring-2 focus:ring-emerald-500&quot;&#10;          aria-label={mobileMenuOpen ? 'Close navigation menu' : 'Open navigation menu'}&#10;          aria-expanded={mobileMenuOpen}&#10;          onClick={() =&gt; setMobileMenuOpen((open) =&gt; !open)}&#10;        &gt;&#10;          &lt;svg className=&quot;h-7 w-7 text-emerald-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;            {mobileMenuOpen ? (&#10;              &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; d=&quot;M6 18L18 6M6 6l12 12&quot; /&gt;&#10;            ) : (&#10;              &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; d=&quot;M4 8h16M4 16h16&quot; /&gt;&#10;            )}&#10;          &lt;/svg&gt;&#10;        &lt;/button&gt;&#10;&#10;        &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;          &lt;Switch /&gt;&#10;          {/* Dashboard link for authenticated users */}&#10;          {(isSignedIn || token) &amp;&amp; (&#10;            &lt;button&#10;              onClick={() =&gt; navigate(isAdmin ? '/admin' : '/user/dashboard')}&#10;              className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 dark:hover:bg-emerald-900/20 h-9 px-4 py-2&quot;&#10;            &gt;&#10;              Dashboard&#10;            &lt;/button&gt;&#10;          )}&#10;&#10;          {isAdmin &amp;&amp; (&#10;            &lt;button&#10;              onClick={() =&gt; navigate('/admin')}&#10;              className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 h-9 px-4 py-2&quot;&#10;            &gt;&#10;              Admin Dashboard&#10;            &lt;/button&gt;&#10;          )}&#10;&#10;          {/* Show logout button when authenticated, login/signup when not */}&#10;          {isSignedIn || token ? (&#10;            &lt;button&#10;              onClick={handleLogout}&#10;              className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-white hover:bg-emerald-600 h-9 px-4 py-2&quot;&#10;            &gt;&#10;              Logout&#10;            &lt;/button&gt;&#10;          ) : (&#10;            &lt;&gt;&#10;              &lt;button&#10;                onClick={() =&gt; navigate('/login')}&#10;                className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2&quot;&#10;              &gt;&#10;                Login&#10;              &lt;/button&gt;&#10;              &lt;button&#10;                onClick={() =&gt; navigate('/signup')}&#10;                className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors text-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-primary-foreground hover:bg-emerald-600 h-9 px-4 py-2&quot;&#10;              &gt;&#10;                Get Started&#10;              &lt;/button&gt;&#10;            &lt;/&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Mobile/Tablet menu overlay and panel */}&#10;      {mobileMenuOpen &amp;&amp; (&#10;        &lt;&gt;&#10;          {/* Dark overlay */}&#10;          &lt;div&#10;            className=&quot;lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm animate-fade-in&quot;&#10;            onClick={() =&gt; setMobileMenuOpen(false)}&#10;            aria-hidden=&quot;true&quot;&#10;          /&gt;&#10;          {/* Panel */}&#10;          &lt;div className=&quot;lg:hidden fixed inset-x-0 top-0 z-[100] animate-fade-slide-up&quot;&gt;&#10;            &lt;nav id=&quot;mobile-nav-panel&quot; className=&quot;relative flex flex-col items-center w-full h-[100vh] bg-white dark:bg-[#18181b] pt-24 gap-6 shadow-xl&quot;&gt;&#10;              &lt;button&#10;                className=&quot;absolute top-6 right-6 text-3xl text-emerald-600 focus:outline-none&quot;&#10;                aria-label=&quot;Close navigation menu&quot;&#10;                onClick={() =&gt; setMobileMenuOpen(false)}&#10;              &gt;&#10;                &amp;times;&#10;              &lt;/button&gt;&#10;&#10;&#10;              {navLinks.map((navItem) =&gt; (&#10;                &lt;Link key={navItem.title}&#10;                  to={navItem.href}&#10;                  onClick={() =&gt; handleNav()}&#10;                  className='text-lg font-medium hover:text-emerald-500 transition-colors duration-300'&#10;                &gt;&#10;                  {navItem.title}&#10;                &lt;/Link&gt;&#10;              ))}&#10;&#10;              {/* Dashboard link for authenticated users in mobile menu */}&#10;              {(isSignedIn || token) &amp;&amp; (&#10;                &lt;button&#10;                  onClick={() =&gt; handleNav(() =&gt; navigate(isAdmin ? '/admin' : '/user/dashboard'))}&#10;                  className=&quot;w-11/12 rounded-md text-base font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 dark:hover:bg-emerald-900/20 h-11 px-4 py-2&quot;&#10;                &gt;&#10;                  Dashboard&#10;                &lt;/button&gt;&#10;              )}&#10;&#10;              {isAdmin &amp;&amp; (&#10;                &lt;button&#10;                  onClick={() =&gt; handleNav(() =&gt; navigate('/admin'))}&#10;                  className=&quot;w-11/12 rounded-md text-base font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 h-11 px-4 py-2&quot;&#10;                &gt;&#10;                  Admin Dashboard&#10;                &lt;/button&gt;&#10;              )}&#10;&#10;              {/* Show logout button when authenticated, login/signup when not */}&#10;              {isSignedIn || token ? (&#10;                &lt;button&#10;                  onClick={() =&gt; handleNav(handleLogout)}&#10;                  className=&quot;w-11/12 rounded-md text-base font-medium bg-emerald-500 text-white hover:bg-emerald-600 h-11 px-4 py-2&quot;&#10;                &gt;&#10;                  Logout&#10;                &lt;/button&gt;&#10;              ) : (&#10;                &lt;&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; handleNav(() =&gt; navigate('/login'))}&#10;                    className=&quot;w-11/12 rounded-md text-base font-medium border border-input hover:bg-accent hover:text-accent-foreground h-11 px-4 py-2&quot;&#10;                  &gt;&#10;                    Login&#10;                  &lt;/button&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; handleNav(() =&gt; navigate('/signup'))}&#10;                    className=&quot;w-11/12 rounded-md text-base font-medium bg-emerald-500 text-white hover:bg-emerald-600 h-11 px-4 py-2&quot;&#10;                  &gt;&#10;                    Get Started&#10;                  &lt;/button&gt;&#10;                &lt;/&gt;&#10;              )}&#10;            &lt;/nav&gt;&#10;          &lt;/div&gt;&#10;        &lt;/&gt;&#10;      )}&#10;    &lt;/header&gt;&#10;  );&#10;};&#10;&#10;export default Navbar;&#10;&#10;&#10;&#10;&#10;// import React from 'react';&#10;// import { useNavigate } from 'react-router-dom';&#10;// import Switch from '../DarkModeToggle';&#10;&#10;// const Navbar = () =&gt; {&#10;//   const navigate = useNavigate();&#10;&#10;//   const scrollToTop = () =&gt; {&#10;//     window.scrollTo({ top: 0, behavior: 'smooth' });&#10;//   };&#10;&#10;//   return (&#10;//     &lt;header&#10;//       className=&quot;sticky top-0 z-50 w-full border-b bg-white/95 dark:bg-[hsla(240,5%,15%,0.8)] backdrop-blur&quot;&#10;//       style={{&#10;//         '--tw-bg-opacity': '0.95',&#10;//         backgroundColor: 'rgba(255, 255, 255, 0.95)'&#10;//       }}&#10;//     &gt;&#10;//       &lt;div className=&quot;container flex h-14 items-center justify-between&quot;&gt;&#10;//         &lt;button onClick={scrollToTop} className=&quot;flex items-center gap-2 hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//           &lt;svg&#10;//             xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;//             width=&quot;24&quot;&#10;//             height=&quot;24&quot;&#10;//             viewBox=&quot;0 0 24 24&quot;&#10;//             fill=&quot;none&quot;&#10;//             stroke=&quot;currentColor&quot;&#10;//             strokeWidth=&quot;2&quot;&#10;//             strokeLinecap=&quot;round&quot;&#10;//             strokeLinejoin=&quot;round&quot;&#10;//             className=&quot;h-6 w-6 text-emerald-500&quot;&#10;//           &gt;&#10;//             &lt;path d=&quot;M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z&quot; /&gt;&#10;//             &lt;circle cx=&quot;12&quot; cy=&quot;10&quot; r=&quot;3&quot; /&gt;&#10;//           &lt;/svg&gt;&#10;//           &lt;span className=&quot;text-xl font-bold&quot;&gt;Civix&lt;/span&gt;&#10;//         &lt;/button&gt;&#10;//         &lt;nav className=&quot;hidden md:flex gap-6&quot;&gt;&#10;//           &lt;a href=&quot;#features&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Features&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#how-it-works&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             How It Works&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#testimonials&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Testimonials&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#faq&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             FAQ&#10;//           &lt;/a&gt;&#10;//         &lt;/nav&gt;&#10;//         &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;//           &lt;Switch /&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/login')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Login&#10;//           &lt;/button&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/signup')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-primary-foreground hover:bg-emerald-500/90 h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Get Started&#10;//           &lt;/button&gt;&#10;//         &lt;/div&gt;&#10;//       &lt;/div&gt;&#10;//     &lt;/header&gt;&#10;//   );&#10;// };&#10;&#10;// export default Navbar;&#10;" />
              <option name="updatedContent" value="// import React from 'react';&#10;// import { useNavigate } from 'react-router-dom';&#10;// import Switch from '../DarkModeToggle';&#10;&#10;// const Navbar = () =&gt; {&#10;//   const navigate = useNavigate();&#10;&#10;//   const scrollToTop = () =&gt; {&#10;//     window.scrollTo({ top: 0, behavior: 'smooth' });&#10;//   };&#10;&#10;//   return (&#10;//     &lt;header&#10;//       className=&quot;sticky top-0 z-50 w-full border-b bg-white/95 dark:bg-[hsla(240,5%,15%,0.8)] backdrop-blur&quot;&#10;//       style={{&#10;//         '--tw-bg-opacity': '0.95',&#10;//         backgroundColor: 'rgba(255, 255, 255, 0.95)'&#10;//       }}&#10;//     &gt;&#10;//       &lt;div className=&quot;container flex h-14 items-center justify-between&quot;&gt;&#10;//         &lt;button onClick={scrollToTop} className=&quot;flex items-center gap-2 hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//           &lt;svg&#10;//             xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;//             width=&quot;24&quot;&#10;//             height=&quot;24&quot;&#10;//             viewBox=&quot;0 0 24 24&quot;&#10;//             fill=&quot;none&quot;&#10;//             stroke=&quot;currentColor&quot;&#10;//             strokeWidth=&quot;2&quot;&#10;//             strokeLinecap=&quot;round&quot;&#10;//             strokeLinejoin=&quot;round&quot;&#10;//             className=&quot;h-6 w-6 text-emerald-500&quot;&#10;//           &gt;&#10;//             &lt;path d=&quot;M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z&quot; /&gt;&#10;//             &lt;circle cx=&quot;12&quot; cy=&quot;10&quot; r=&quot;3&quot; /&gt;&#10;//           &lt;/svg&gt;&#10;//           &lt;span className=&quot;text-xl font-bold&quot;&gt;Civix&lt;/span&gt;&#10;//         &lt;/button&gt;&#10;//         &lt;nav className=&quot;hidden md:flex gap-6&quot;&gt;&#10;//           &lt;a href=&quot;#features&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Features&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#how-it-works&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             How It Works&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#testimonials&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Testimonials&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#faq&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             FAQ&#10;//           &lt;/a&gt;&#10;//         &lt;/nav&gt;&#10;//         &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;//           &lt;Switch /&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/login')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Login&#10;//           &lt;/button&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/signup')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-primary-foreground hover:bg-emerald-500/90 h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Get Started&#10;//           &lt;/button&gt;&#10;//         &lt;/div&gt;&#10;//       &lt;/div&gt;&#10;//     &lt;/header&gt;&#10;//   );&#10;// };&#10;&#10;// export default Navbar;&#10;&#10;&#10;import React, { useState, useEffect, useRef } from 'react';&#10;import { useNavigate, Link } from 'react-router-dom';&#10;import Switch from '../DarkModeToggle';&#10;import { jwtDecode } from 'jwt-decode';&#10;import { useAuth } from '@clerk/clerk-react';&#10;import logo from './logoo.svg';&#10;&#10;const Navbar = () =&gt; {&#10;  const navigate = useNavigate();&#10;  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);&#10;  const [profileDropdownOpen, setProfileDropdownOpen] = useState(false);&#10;  const dropdownRef = useRef(null);&#10;  const { isSignedIn, signOut } = useAuth();&#10;&#10;  // Close menu on route change or navigation&#10;  const handleNav = (cb) =&gt; {&#10;    setMobileMenuOpen(false);&#10;    if (cb) cb();&#10;  };&#10;&#10;  // Handle logout&#10;  const handleLogout = async () =&gt; {&#10;    if (signOut) {&#10;      await signOut(); // Clerk: clears session and data&#10;    }&#10;    localStorage.removeItem(&quot;token&quot;);&#10;    window.dispatchEvent(new Event(&quot;storage-update&quot;));&#10;    setProfileDropdownOpen(false);&#10;    navigate(&quot;/&quot;);&#10;  };&#10;&#10;  // Close profile dropdown when clicking outside&#10;  useEffect(() =&gt; {&#10;    const handleClickOutside = (event) =&gt; {&#10;      if (dropdownRef.current &amp;&amp; !dropdownRef.current.contains(event.target)) {&#10;        setProfileDropdownOpen(false);&#10;      }&#10;    };&#10;&#10;    document.addEventListener('mousedown', handleClickOutside);&#10;    return () =&gt; {&#10;      document.removeEventListener('mousedown', handleClickOutside);&#10;    };&#10;  }, []);&#10;&#10;  // Close menu on Escape key&#10;  useEffect(() =&gt; {&#10;    if (!mobileMenuOpen) return;&#10;    const onKeyDown = (e) =&gt; {&#10;      if (e.key === 'Escape') setMobileMenuOpen(false);&#10;    };&#10;    window.addEventListener('keydown', onKeyDown);&#10;    return () =&gt; window.removeEventListener('keydown', onKeyDown);&#10;  }, [mobileMenuOpen]);&#10;&#10;  // Close menu when clicking outside&#10;  useEffect(() =&gt; {&#10;    if (!mobileMenuOpen) return;&#10;    const onClick = (e) =&gt; {&#10;      if (e.target.closest('#mobile-nav-panel') || e.target.closest('#mobile-nav-toggle')) return;&#10;      setMobileMenuOpen(false);&#10;    };&#10;    document.addEventListener('mousedown', onClick);&#10;    return () =&gt; document.removeEventListener('mousedown', onClick);&#10;  }, [mobileMenuOpen]);&#10;&#10;  // ✅ Check if logged-in user is admin&#10;  const token = localStorage.getItem('token');&#10;  let isAdmin = false;&#10;&#10;  try {&#10;    if (token) {&#10;      const decoded = jwtDecode(token);&#10;      isAdmin = decoded.role === 'admin';&#10;    }&#10;  } catch (err) {&#10;    console.error('Invalid token');&#10;  }&#10;&#10;  const navLinks = [&#10;    {&#10;      title: &quot;Civic Education &amp; Rights&quot;,&#10;      href: &quot;/civic-education&quot;&#10;    },&#10;    {&#10;      title: &quot;About&quot;,&#10;      href: &quot;/about&quot;&#10;    },&#10;    {&#10;      title: &quot;Contact Us&quot;,&#10;      href: &quot;/contact&quot;&#10;    },&#10;    {&#10;      title: &quot;Our contributors&quot;,&#10;      href: &quot;/contributors&quot;&#10;    },&#10;&#10;  ]&#10;&#10;  return (&#10;    &lt;header className=&quot;sticky top-0 z-50 w-full border-b bg-white/95 dark:bg-[hsla(240,5%,15%,0.8)] backdrop-blur&quot;&gt;&#10;      &lt;div className=&quot;container flex h-14 items-center justify-between&quot;&gt;&#10;        &lt;button onClick={() =&gt; { setMobileMenuOpen(false); navigate('/'); }} className=&quot;flex items-center gap-2 hover:text-emerald-500 transition-colors duration-300&quot; style={{ width: &quot;74px&quot;, marginLeft: &quot;21px&quot; }}&#10;        &gt;&#10;&#10;          &lt;img src={logo} alt=&quot;&quot; /&gt;&#10;          &lt;span id=&quot;logo&quot; className=&quot;text-xl font-bold&quot; onClick={() =&gt; window.scrollTo({ top: 0, behavior: 'smooth' })}&gt;  &lt;/span&gt;&#10;        &lt;/button&gt;&#10;&#10;        {/* Desktop nav - only show on large screens */}&#10;        &lt;nav className=&quot;hidden lg:flex gap-6&quot;&gt;&#10;          {navLinks.map((navItem) =&gt; (&#10;            &lt;Link key={navItem.title}&#10;              to={navItem.href}&#10;              className='text-sm font-medium hover:text-emerald-500 transition-colors duration-300'&#10;            &gt;&#10;              {navItem.title}&#10;            &lt;/Link&gt;&#10;          ))}&#10;        &lt;/nav&gt;&#10;&#10;&#10;        {/* Hamburger for mobile and tablet */}&#10;        &lt;button&#10;          id=&quot;mobile-nav-toggle&quot;&#10;          className=&quot;lg:hidden flex items-center justify-center p-2 rounded focus:outline-none focus:ring-2 focus:ring-emerald-500&quot;&#10;          aria-label={mobileMenuOpen ? 'Close navigation menu' : 'Open navigation menu'}&#10;          aria-expanded={mobileMenuOpen}&#10;          onClick={() =&gt; setMobileMenuOpen((open) =&gt; !open)}&#10;        &gt;&#10;          &lt;svg className=&quot;h-7 w-7 text-emerald-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;            {mobileMenuOpen ? (&#10;              &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; d=&quot;M6 18L18 6M6 6l12 12&quot; /&gt;&#10;            ) : (&#10;              &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; d=&quot;M4 8h16M4 16h16&quot; /&gt;&#10;            )}&#10;          &lt;/svg&gt;&#10;        &lt;/button&gt;&#10;&#10;        &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;          &lt;Switch /&gt;&#10;          &#10;          {/* Profile Icon with Dropdown for authenticated users */}&#10;          {(isSignedIn || token) &amp;&amp; (&#10;            &lt;div className=&quot;relative&quot; ref={dropdownRef}&gt;&#10;              &lt;button&#10;                onClick={() =&gt; setProfileDropdownOpen(!profileDropdownOpen)}&#10;                className=&quot;hidden lg:flex items-center justify-center w-9 h-9 rounded-full bg-emerald-100 hover:bg-emerald-200 dark:bg-emerald-900 dark:hover:bg-emerald-800 transition-colors duration-200&quot;&#10;                aria-label=&quot;Profile menu&quot;&#10;              &gt;&#10;                &lt;svg&#10;                  className=&quot;w-5 h-5 text-emerald-600 dark:text-emerald-400&quot;&#10;                  fill=&quot;none&quot;&#10;                  stroke=&quot;currentColor&quot;&#10;                  viewBox=&quot;0 0 24 24&quot;&#10;                  xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;                &gt;&#10;                  &lt;path&#10;                    strokeLinecap=&quot;round&quot;&#10;                    strokeLinejoin=&quot;round&quot;&#10;                    strokeWidth={2}&#10;                    d=&quot;M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z&quot;&#10;                  /&gt;&#10;                &lt;/svg&gt;&#10;              &lt;/button&gt;&#10;&#10;              {/* Profile Dropdown */}&#10;              {profileDropdownOpen &amp;&amp; (&#10;                &lt;div className=&quot;absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-md shadow-lg border border-gray-200 dark:border-gray-700 py-2 z-50&quot;&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; {&#10;                      setProfileDropdownOpen(false);&#10;                      navigate('/profile');&#10;                    }}&#10;                    className=&quot;w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center gap-2&quot;&#10;                  &gt;&#10;                    &lt;svg className=&quot;w-4 h-4&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                      &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; strokeWidth={2} d=&quot;M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z&quot; /&gt;&#10;                    &lt;/svg&gt;&#10;                    Profile&#10;                  &lt;/button&gt;&#10;                  &#10;                  &lt;button&#10;                    onClick={() =&gt; {&#10;                      setProfileDropdownOpen(false);&#10;                      navigate(isAdmin ? '/admin' : '/user/dashboard');&#10;                    }}&#10;                    className=&quot;w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center gap-2&quot;&#10;                  &gt;&#10;                    &lt;svg className=&quot;w-4 h-4&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                      &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; strokeWidth={2} d=&quot;M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z&quot; /&gt;&#10;                    &lt;/svg&gt;&#10;                    Dashboard&#10;                  &lt;/button&gt;&#10;&#10;                  {isAdmin &amp;&amp; (&#10;                    &lt;button&#10;                      onClick={() =&gt; {&#10;                        setProfileDropdownOpen(false);&#10;                        navigate('/admin');&#10;                      }}&#10;                      className=&quot;w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center gap-2&quot;&#10;                    &gt;&#10;                      &lt;svg className=&quot;w-4 h-4&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                        &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; strokeWidth={2} d=&quot;M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z&quot; /&gt;&#10;                      &lt;/svg&gt;&#10;                      Admin Panel&#10;                    &lt;/button&gt;&#10;                  )}&#10;&#10;                  &lt;hr className=&quot;my-2 border-gray-200 dark:border-gray-700&quot; /&gt;&#10;                  &#10;                  &lt;button&#10;                    onClick={handleLogout}&#10;                    className=&quot;w-full text-left px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 flex items-center gap-2&quot;&#10;                  &gt;&#10;                    &lt;svg className=&quot;w-4 h-4&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                      &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; strokeWidth={2} d=&quot;M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1&quot; /&gt;&#10;                    &lt;/svg&gt;&#10;                    Logout&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/div&gt;&#10;          )}&#10;&#10;          {/* Dashboard link for authenticated users */}&#10;          {(isSignedIn || token) &amp;&amp; (&#10;            &lt;button&#10;              onClick={() =&gt; navigate(isAdmin ? '/admin' : '/user/dashboard')}&#10;              className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 dark:hover:bg-emerald-900/20 h-9 px-4 py-2&quot;&#10;            &gt;&#10;              Dashboard&#10;            &lt;/button&gt;&#10;          )}&#10;&#10;          {/* Show logout button when authenticated, login/signup when not */}&#10;          {isSignedIn || token ? (&#10;            &lt;button&#10;              onClick={handleLogout}&#10;              className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-white hover:bg-emerald-600 h-9 px-4 py-2&quot;&#10;            &gt;&#10;              Logout&#10;            &lt;/button&gt;&#10;          ) : (&#10;            &lt;&gt;&#10;              &lt;button&#10;                onClick={() =&gt; navigate('/login')}&#10;                className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2&quot;&#10;              &gt;&#10;                Login&#10;              &lt;/button&gt;&#10;              &lt;button&#10;                onClick={() =&gt; navigate('/signup')}&#10;                className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors text-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-primary-foreground hover:bg-emerald-600 h-9 px-4 py-2&quot;&#10;              &gt;&#10;                Get Started&#10;              &lt;/button&gt;&#10;            &lt;/&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Mobile/Tablet menu overlay and panel */}&#10;      {mobileMenuOpen &amp;&amp; (&#10;        &lt;&gt;&#10;          {/* Dark overlay */}&#10;          &lt;div&#10;            className=&quot;lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm animate-fade-in&quot;&#10;            onClick={() =&gt; setMobileMenuOpen(false)}&#10;            aria-hidden=&quot;true&quot;&#10;          /&gt;&#10;          {/* Panel */}&#10;          &lt;div className=&quot;lg:hidden fixed inset-x-0 top-0 z-[100] animate-fade-slide-up&quot;&gt;&#10;            &lt;nav id=&quot;mobile-nav-panel&quot; className=&quot;relative flex flex-col items-center w-full h-[100vh] bg-white dark:bg-[#18181b] pt-24 gap-6 shadow-xl&quot;&gt;&#10;              &lt;button&#10;                className=&quot;absolute top-6 right-6 text-3xl text-emerald-600 focus:outline-none&quot;&#10;                aria-label=&quot;Close navigation menu&quot;&#10;                onClick={() =&gt; setMobileMenuOpen(false)}&#10;              &gt;&#10;                &amp;times;&#10;              &lt;/button&gt;&#10;&#10;              {navLinks.map((navItem) =&gt; (&#10;                &lt;Link key={navItem.title}&#10;                  to={navItem.href}&#10;                  onClick={() =&gt; handleNav()}&#10;                  className='text-lg font-medium hover:text-emerald-500 transition-colors duration-300'&#10;                &gt;&#10;                  {navItem.title}&#10;                &lt;/Link&gt;&#10;              ))}&#10;&#10;              {/* Profile link for authenticated users in mobile menu */}&#10;              {(isSignedIn || token) &amp;&amp; (&#10;                &lt;button&#10;                  onClick={() =&gt; handleNav(() =&gt; navigate('/profile'))}&#10;                  className=&quot;w-11/12 rounded-md text-base font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 dark:hover:bg-emerald-900/20 h-11 px-4 py-2&quot;&#10;                &gt;&#10;                  Profile&#10;                &lt;/button&gt;&#10;              )}&#10;&#10;              {/* Dashboard link for authenticated users in mobile menu */}&#10;              {(isSignedIn || token) &amp;&amp; (&#10;                &lt;button&#10;                  onClick={() =&gt; handleNav(() =&gt; navigate(isAdmin ? '/admin' : '/user/dashboard'))}&#10;                  className=&quot;w-11/12 rounded-md text-base font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 dark:hover:bg-emerald-900/20 h-11 px-4 py-2&quot;&#10;                &gt;&#10;                  Dashboard&#10;                &lt;/button&gt;&#10;              )}&#10;&#10;              {isAdmin &amp;&amp; (&#10;                &lt;button&#10;                  onClick={() =&gt; handleNav(() =&gt; navigate('/admin'))}&#10;                  className=&quot;w-11/12 rounded-md text-base font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 h-11 px-4 py-2&quot;&#10;                &gt;&#10;                  Admin Dashboard&#10;                &lt;/button&gt;&#10;              )}&#10;&#10;              {/* Show logout button when authenticated, login/signup when not */}&#10;              {isSignedIn || token ? (&#10;                &lt;button&#10;                  onClick={() =&gt; handleNav(handleLogout)}&#10;                  className=&quot;w-11/12 rounded-md text-base font-medium bg-emerald-500 text-white hover:bg-emerald-600 h-11 px-4 py-2&quot;&#10;                &gt;&#10;                  Logout&#10;                &lt;/button&gt;&#10;              ) : (&#10;                &lt;&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; handleNav(() =&gt; navigate('/login'))}&#10;                    className=&quot;w-11/12 rounded-md text-base font-medium border border-input hover:bg-accent hover:text-accent-foreground h-11 px-4 py-2&quot;&#10;                  &gt;&#10;                    Login&#10;                  &lt;/button&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; handleNav(() =&gt; navigate('/signup'))}&#10;                    className=&quot;w-11/12 rounded-md text-base font-medium bg-emerald-500 text-white hover:bg-emerald-600 h-11 px-4 py-2&quot;&#10;                  &gt;&#10;                    Get Started&#10;                  &lt;/button&gt;&#10;                &lt;/&gt;&#10;              )}&#10;            &lt;/nav&gt;&#10;          &lt;/div&gt;&#10;        &lt;/&gt;&#10;      )}&#10;    &lt;/header&gt;&#10;  );&#10;};&#10;&#10;export default Navbar;&#10;&#10;&#10;&#10;&#10;// import React from 'react';&#10;// import { useNavigate } from 'react-router-dom';&#10;// import Switch from '../DarkModeToggle';&#10;&#10;// const Navbar = () =&gt; {&#10;//   const navigate = useNavigate();&#10;&#10;//   const scrollToTop = () =&gt; {&#10;//     window.scrollTo({ top: 0, behavior: 'smooth' });&#10;//   };&#10;&#10;//   return (&#10;//     &lt;header&#10;//       className=&quot;sticky top-0 z-50 w-full border-b bg-white/95 dark:bg-[hsla(240,5%,15%,0.8)] backdrop-blur&quot;&#10;//       style={{&#10;//         '--tw-bg-opacity': '0.95',&#10;//         backgroundColor: 'rgba(255, 255, 255, 0.95)'&#10;//       }}&#10;//     &gt;&#10;//       &lt;div className=&quot;container flex h-14 items-center justify-between&quot;&gt;&#10;//         &lt;button onClick={scrollToTop} className=&quot;flex items-center gap-2 hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//           &lt;svg&#10;//             xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;//             width=&quot;24&quot;&#10;//             height=&quot;24&quot;&#10;//             viewBox=&quot;0 0 24 24&quot;&#10;//             fill=&quot;none&quot;&#10;//             stroke=&quot;currentColor&quot;&#10;//             strokeWidth=&quot;2&quot;&#10;//             strokeLinecap=&quot;round&quot;&#10;//             strokeLinejoin=&quot;round&quot;&#10;//             className=&quot;h-6 w-6 text-emerald-500&quot;&#10;//           &gt;&#10;//             &lt;path d=&quot;M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z&quot; /&gt;&#10;//             &lt;circle cx=&quot;12&quot; cy=&quot;10&quot; r=&quot;3&quot; /&gt;&#10;//           &lt;/svg&gt;&#10;//           &lt;span className=&quot;text-xl font-bold&quot;&gt;Civix&lt;/span&gt;&#10;//         &lt;/button&gt;&#10;//         &lt;nav className=&quot;hidden md:flex gap-6&quot;&gt;&#10;//           &lt;a href=&quot;#features&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Features&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#how-it-works&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             How It Works&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#testimonials&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Testimonials&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#faq&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             FAQ&#10;//           &lt;/a&gt;&#10;//         &lt;/nav&gt;&#10;//         &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;//           &lt;Switch /&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/login')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Login&#10;//           &lt;/button&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/signup')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-primary-foreground hover:bg-emerald-500/90 h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Get Started&#10;//           &lt;/button&gt;&#10;//         &lt;/div&gt;&#10;//       &lt;/div&gt;&#10;//     &lt;/header&gt;&#10;//   );&#10;// };&#10;&#10;// export default Navbar;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>